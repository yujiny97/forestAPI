<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="kr.co.beautifour.UserMapper">
<!-- 모든 user 찾기 -> 이거는 나중에 지워야함 -->
    <select id="selectUser" resultType= "kr.co.beautifour.domain.UserVO">
        select * from UserINF
    </select>
<!-- UID로 user 정보 찾기 -->
    <select id="selectUserByID" resultType= "kr.co.beautifour.domain.UserVO">
        select * from UserINF where UID="${UID}"
    </select>    

<!-- 새로운 유저 insert하기 -->
	<insert id="insertUser">
		insert into UserINF (UID,PW,UName,gender,age) 
		values(#{UID},password(#{PW}),#{UName},#{gender},#{age})
	</insert>
	
<!-- User정보 있는지 확인 -->
    <select id="Uservalid" resultType= "java.lang.Integer">
        select COUNT(*) from UserINF where UID="${UID}" and PW=password(#{PW});
    </select> 

	<!--도감 insert 하기  -->
	<insert id="insertMybook">
		insert into MyBook (bookid,UID,story,picadd,ForT,writeD) 
		values((select if(count(m.bookid)=0,1,MAX(m.bookid)+1) 
		from MyBook m where m.UID=#{uid}),
		#{uid},
		#{story},
		#{picadd},
		#{forT},
		date_format(NOW(),'%Y-%m-%d %H:%i:%s'));
	</insert>
	
		<!--사용자 temp 도감 insert 하기  -->
	<insert id="insertTempPlants">
		insert into TempPlants (bid,UID,fskName,fseName,fsLifeTime,fsImg_1,fsGbn,fsClassname,isHerb,writeD) 
		values((select if(count(m.bid)=0,1,MAX(m.bid)+1) 
		from TempPlants m where m.UID=#{uid}),
		#{uid},
		#{fskName},
		#{fseName},
		#{fsLifeTime},
		#{fsImg_1},
		#{fsGbn},
		#{fsClassname},
		#{isHerb},
		date_format(NOW(),'%Y-%m-%d %H:%i:%s')
		);
	</insert>
	<!-- delete TempPlants로 삭제하기 -->
    <delete id="deleteTempPlants">
        delete from TempPlants where UID=#{uid} and bid=#{bid};
    </delete>
    
    	<!-- delete TempPlants로 삭제하기 -->
    <delete id="deleteallTempPlants">
        delete from TempPlants where UID=#{uid};
    </delete>
    
    <!-- UID와 bookid 그리고 TempPlants 수정하기 -->
    <update id="updateTempPlants">
        update TempPlants set 
        fskName=#{fskName},
        fseName=#{fseName},
        fsImg_1=#{fsImg_1},
        fsGbn=#{fsGbn},
        fsClassname=#{fsClassname},
        isHerb=#{isHerb},
        fsLifeTime=#{fsLifeTime}
        where UID=#{uid} and bid=#{bid}
    </update>

	<!-- Plants에 똑같은 이름을 가진 식물이 있는지 확인 -->
    <select id="selectOnePlantsByName" resultType= "java.lang.Integer">
        select Count(*) from Plants where fskName=#{fskName}
    </select>
	
	<!-- UID오 did로TempPlants하나만 찾기 -->
    <select id="selectOneTempPlants" resultType= "kr.co.beautifour.domain.TempPlantsVO">
        select * from TempPlants where UID=#{uid} and bid=#{bid}
    </select>
    
    	<!-- UID로 TempPlants 찾기 -->
    <select id="selectTempPlants" resultType= "kr.co.beautifour.domain.TempPlantsVO">
        select * from TempPlants where UID=#{uid}
    </select> 
	
<!-- UID로 mybooklist 찾기 -->
    <select id="selectMybookByID" resultType= "kr.co.beautifour.domain.MybookVO">
        select * from MyBook where UID=#{uid}
    </select> 
	
<!-- UID와 bookid로 삭제하기 -->
    <delete id="deleteMybookByID">
        delete from MyBook where UID="${uid}" and bookid=${bookid}
    </delete> 
	
<!-- UID와 bookid 그리고 새로운 text로 글 수정하기 -->
    <update id="updateMybookByID">
        update MyBook set story=#{story},picadd=#{picadd} where UID=#{uid} and bookid=#{bookid};
    </update>
</mapper>